<?xml version="1.0" encoding="UTF-8"?>
<!-- log4j2使用说明（create By SeanXiao）：
使用方式如下：
private static final Logger logger = LogManager.getLogger(实际类名.class.getName());

2、日志说明：
（1）请根据实际情况配置各项参数
（2）需要注意日志文件备份数和日志文件大小，注意预留目录空间
（3）实际部署的时候LOG_FILE_NAME变量需要修改成linux目录
 -->

<!-- Log4j 2.x 配置文件。每1800秒自动检查和应用配置文件的更新； -->
<configuration status="error" monitorInterval="1800"  strict="true" schema="Log4J-V2.2.xsd">
    <Properties>
        <Property name="LOG_HOME">Logs/task9/</Property>
        <Property name="LOG_FILE_NAME">front-client.log</Property>
    </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M %l- %n%msg%xEx%n" />
        </Console>

<!--============================sql语句的输出设置===========================================-->
        <Console name="consolePrint" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n" />
        </Console>


<!--============================spring info 级别信息的拦截，只让输出error级别============-->
        <Console name="consoleSpring" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n" />
        </Console>

 <!--=============================以上为定义输出的格式===========================================-->

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="${LOG_HOME}${LOG_FILE_NAME}"
                     filePattern="${LOG_HOME}$${date:yyyy-MM}/app-%d{yyyyMMddHHmmssSSS}-client.log.gz">
            <PatternLayout
                    pattern="%d{yyyy.MM.dd 'at' HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />

            <!-- 日志文件大小 -->
            <SizeBasedTriggeringPolicy size="20MB" />
            <!-- 最多保留文件数 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </appenders>


    <!--=============================以上定义为整理压缩的日志的格式=====================================-->
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger-->
        <Logger name="com.mvc" level="info"
                additivity="false">
            <AppenderRef ref="RollingFile" />
            <AppenderRef ref="Console" />
        </Logger>
        <Logger name="org.springframework" level="ERROR"
                additivity="false">
            <AppenderRef ref="consoleSpring" />
        </Logger>


        <!--将log4j2.xml中的Root更改为trace，用于查看Spring中的日志-->
        <Root level="info"> <!-- 全局配置 -->
            <AppenderRef ref="Console" />
            <!--<AppenderRef ref="RollingFile" />-->
            <!--<appender-ref ref="consolePrint" />-->
        </Root>
        <!-- 为sql语句配置特殊的Log级别，方便调试 -->
        <!--调整level的级别来看更详细的信息-->
        <!--<Logger name="jnshu.tasknine.dao" level="info" additivity="false">-->
            <!--<AppenderRef ref="consolePrint" />-->
        <!--</Logger>-->
    </loggers>
</configuration>